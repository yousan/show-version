name: Update Version Badge

on:
  push:
    branches: [ main, master ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main, master ]
  # 手動実行も可能に
  workflow_dispatch:
  # 定期実行（毎日UTCの0時に実行）
  schedule:
    - cron: '0 0 * * *'

jobs:
  update-badge:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # 全履歴を取得（タグ情報を取得するため）
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Create version badge script
        run: |
          cat > update-badge.js << 'EOF'
          const fs = require('fs');
          const path = require('path');
          const { execSync } = require('child_process');
          
          // show-versionパッケージをインストールして使用する代わりに、自分自身のコードを使用
          const { getVersionAsync } = require('./src/index');
          
          async function updateBadge() {
            try {
              // バージョン情報を取得
              const version = await getVersionAsync({
                format: '{tag}-{branch}-{hash}'
              });
              
              // タグのみのバージョン（semver用）
              const tagVersion = await getVersionAsync({
                branchName: false,
                commitHash: false,
                format: '{tag}'
              });
              
              // 変更があるか確認
              const isDirty = await getVersionAsync({
                dir: '.',
                format: '{dirty}',
                dirtyValue: 'true',
                cleanValue: 'false'
              });
              
              // バッジ用のURLを作成
              const badgeColor = isDirty === 'true' ? 'orange' : 'blue';
              const badgeVersion = isDirty === 'true' ? `${version}-dirty` : version;
              const badgeUrl = `https://img.shields.io/badge/version-${encodeURIComponent(badgeVersion)}-${badgeColor}.svg`;
              
              // READMEファイルを読み込む
              const readmePath = path.join(process.cwd(), 'README.md');
              const readmeContent = fs.readFileSync(readmePath, 'utf8');
              
              // バッジ部分を作成
              const badgeContent = `<!-- BEGIN VERSION BADGE -->
[![Version](${badgeUrl})](https://github.com/yousan/show-version/releases/tag/${tagVersion === '0.0.0' ? 'latest' : tagVersion})
[![SemVer](https://img.shields.io/badge/SemVer-${tagVersion}-brightgreen.svg)](https://semver.org/)
<!-- END VERSION BADGE -->`;
              
              // バッジ部分を置換
              const newReadmeContent = readmeContent.replace(
                /<!-- BEGIN VERSION BADGE -->[\s\S]*?<!-- END VERSION BADGE -->/,
                badgeContent
              );
              
              // ファイルが変更された場合のみ書き込み
              if (newReadmeContent !== readmeContent) {
                console.log('Updating README with new version badge:', badgeVersion);
                fs.writeFileSync(readmePath, newReadmeContent, 'utf8');
                return true;
              } else {
                console.log('No changes to README needed');
                return false;
              }
            } catch (error) {
              console.error('Error updating version badge:', error);
              return false;
            }
          }
          
          // スクリプト実行
          updateBadge().then(changed => {
            process.exit(changed ? 0 : 1);
          });
          EOF
      
      - name: Update badge
        run: node update-badge.js
      
      - name: Check for changes
        id: changes
        run: |
          if [[ $(git status --porcelain README.md) ]]; then
            echo "CHANGES_DETECTED=true" >> $GITHUB_ENV
            echo "Changes detected in README.md"
          else
            echo "CHANGES_DETECTED=false" >> $GITHUB_ENV
            echo "No changes detected in README.md"
          fi
      
      - name: Commit and push changes
        if: env.CHANGES_DETECTED == 'true'
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add README.md
          git commit -m "docs: update version badge [skip ci]"
          git push 
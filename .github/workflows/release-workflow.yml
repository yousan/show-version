name: Release Workflow

on:
  push:
    tags:
      - 'v*'  # Execute when tags are created
  
  # Allow manual execution
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to update (if not specified, get from package.json)'
        required: false
        type: string
      publish:
        description: 'Publish package to npm'
        required: false
        type: boolean
        default: false

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          registry-url: 'https://registry.npmjs.org'

      - name: Install dependencies
        run: npm ci

      # Use version from manual execution input
      - name: Get version from input
        if: github.event_name == 'workflow_dispatch' && inputs.version != ''
        run: |
          echo "VERSION=${{ inputs.version }}" >> $GITHUB_ENV

      # Get version from tag
      - name: Get version from tag
        if: github.event_name == 'push'
        run: |
          echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_ENV

      # Get version from package.json
      - name: Get version from package.json
        if: env.VERSION == ''
        run: |
          echo "VERSION=$(node -p "require('./package.json').version")" >> $GITHUB_ENV

      - name: Show version
        run: |
          echo "Version to use: $VERSION"

      - name: Update README badges
        run: |
          ./bin/update_myself.sh
          if [[ -n $(git status --porcelain README.md) ]]; then
            echo "README.md has changes. Committing."
            git config --local user.email "action@github.com"
            git config --local user.name "GitHub Action"
            git add README.md
            git commit -m "docs: update version badges [skip ci]"
            git push
          fi

      - name: Publish to npm
        if: inputs.publish
        run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }} 